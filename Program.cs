using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Renci.SshNet;
using Renci.SshNet.Common;
using IronPython.Hosting;
using Microsoft.Scripting.Hosting;

namespace ConsoleApplication1
{
    class Program
    {
        static void Main(string[] args)
        {
            //Connection information
            string user = "+++++++++++";
            string pass = "root";
            string host = "**********+";

            doPython();
            //Set up the SSH connection
            using (var client = new SshClient(host,9907, user, pass))
            {

                //Accept Host key
                client.HostKeyReceived += delegate (object sender, HostKeyEventArgs e)
                {
                    e.CanTrust = true;
                };

                //Start the connection
                client.Connect();

                var output = client.RunCommand("cd /etc ; ls").Result;


                client.Disconnect();
                Console.WriteLine(output.ToString());
                Console.ReadLine();

                
            }
        }
        private static void doPython()
        {
            ScriptEngine engine = Python.CreateEngine();
            engine.ExecuteFile(@"D:\juan-\Documents\Computacion\Proyecto\SSHtest\prueba.py");
        }
    }

}


//public string run_cmd(string cmd, string args)
//{
//    ProcessStartInfo start = new ProcessStartInfo();
//    start.FileName = "PATH_TO_PYTHON_EXE";
//    start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
//    start.UseShellExecute = false;// Do not use OS shell
//    start.CreateNoWindow = true; // We don't need new window
//    start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
//    start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
//    using (Process process = Process.Start(start))
//    {
//        using (StreamReader reader = process.StandardOutput)
//        {
//            string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
//            string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
//            return result;
//        }
//    }
//}
